# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, validator  # noqa: F401
from openapi_server.models.attach_decorator_data import AttachDecoratorData


class AttachDecorator(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    AttachDecorator - a model defined in OpenAPI

        id: The id of this AttachDecorator [Optional].
        byte_count: The byte_count of this AttachDecorator [Optional].
        data: The data of this AttachDecorator.
        description: The description of this AttachDecorator [Optional].
        filename: The filename of this AttachDecorator [Optional].
        lastmod_time: The lastmod_time of this AttachDecorator [Optional].
        mime_type: The mime_type of this AttachDecorator [Optional].
    """

    id: Optional[str] = None
    byte_count: Optional[int] = None
    data: AttachDecoratorData
    description: Optional[str] = None
    filename: Optional[str] = None
    lastmod_time: Optional[str] = None
    mime_type: Optional[str] = None

    @validator("lastmod_time")
    def lastmod_time_pattern(cls, value):
        assert value is not None and re.match(r"^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$", value)
        return value

AttachDecorator.update_forward_refs()
