# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, validator  # noqa: F401


class DIFOptions(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    DIFOptions - a model defined in OpenAPI

        challenge: The challenge of this DIFOptions [Optional].
        domain: The domain of this DIFOptions [Optional].
    """

    challenge: Optional[str] = None
    domain: Optional[str] = None

    @validator("challenge")
    def challenge_pattern(cls, value):
        assert value is not None and re.match(
            r"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            value,
        )
        return value


DIFOptions.update_forward_refs()
