# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, validator  # noqa: F401


class DID(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    DID - a model defined in OpenAPI

        did: The did of this DID [Optional].
        key_type: The key_type of this DID [Optional].
        method: The method of this DID [Optional].
        posture: The posture of this DID [Optional].
        verkey: The verkey of this DID [Optional].
    """

    did: Optional[str] = None
    key_type: Optional[str] = None
    method: Optional[str] = None
    posture: Optional[str] = None
    verkey: Optional[str] = None

    @validator("did")
    def did_pattern(cls, value):
        assert value is not None and re.match(
            r"^did:key:z[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+$|^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
            value,
        )
        return value

    @validator("verkey")
    def verkey_pattern(cls, value):
        assert value is not None and re.match(
            r"^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$",
            value,
        )
        return value


DID.update_forward_refs()
