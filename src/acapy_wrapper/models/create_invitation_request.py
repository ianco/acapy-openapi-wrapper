# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, validator  # noqa: F401


class CreateInvitationRequest(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    CreateInvitationRequest - a model defined in OpenAPI

        mediation_id: The mediation_id of this CreateInvitationRequest [Optional].
        metadata: The metadata of this CreateInvitationRequest [Optional].
        my_label: The my_label of this CreateInvitationRequest [Optional].
        recipient_keys: The recipient_keys of this CreateInvitationRequest [Optional].
        routing_keys: The routing_keys of this CreateInvitationRequest [Optional].
        service_endpoint: The service_endpoint of this CreateInvitationRequest [Optional].
    """

    mediation_id: Optional[str] = None
    metadata: Optional[Dict[str, Any]] = None
    my_label: Optional[str] = None
    recipient_keys: Optional[List[str]] = None
    routing_keys: Optional[List[str]] = None
    service_endpoint: Optional[str] = None

    @validator("mediation_id")
    def mediation_id_pattern(cls, value):
        assert value is not None and re.match(
            r"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            value,
        )
        return value


CreateInvitationRequest.update_forward_refs()
