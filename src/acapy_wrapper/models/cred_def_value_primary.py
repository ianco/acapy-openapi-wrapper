# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, validator  # noqa: F401
from acapy_wrapper.models.generated import Generated


class CredDefValuePrimary(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    CredDefValuePrimary - a model defined in OpenAPI

        n: The n of this CredDefValuePrimary [Optional].
        r: The r of this CredDefValuePrimary [Optional].
        rctxt: The rctxt of this CredDefValuePrimary [Optional].
        s: The s of this CredDefValuePrimary [Optional].
        z: The z of this CredDefValuePrimary [Optional].
    """

    n: Optional[str] = None
    r: Optional[Generated] = None
    rctxt: Optional[str] = None
    s: Optional[str] = None
    z: Optional[str] = None

    @validator("n")
    def n_pattern(cls, value):
        assert value is not None and re.match(r"^[0-9]*$", value)
        return value

    @validator("rctxt")
    def rctxt_pattern(cls, value):
        assert value is not None and re.match(r"^[0-9]*$", value)
        return value

    @validator("s")
    def s_pattern(cls, value):
        assert value is not None and re.match(r"^[0-9]*$", value)
        return value

    @validator("z")
    def z_pattern(cls, value):
        assert value is not None and re.match(r"^[0-9]*$", value)
        return value

CredDefValuePrimary.update_forward_refs()
