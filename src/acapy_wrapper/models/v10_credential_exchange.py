# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, validator  # noqa: F401
from acapy_wrapper.models.credential_offer import CredentialOffer
from acapy_wrapper.models.credential_proposal import CredentialProposal
from acapy_wrapper.models.indy_cred_abstract import IndyCredAbstract
from acapy_wrapper.models.indy_cred_info import IndyCredInfo
from acapy_wrapper.models.indy_cred_request import IndyCredRequest
from acapy_wrapper.models.indy_credential import IndyCredential


class V10CredentialExchange(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    V10CredentialExchange - a model defined in OpenAPI

        auto_issue: The auto_issue of this V10CredentialExchange [Optional].
        auto_offer: The auto_offer of this V10CredentialExchange [Optional].
        auto_remove: The auto_remove of this V10CredentialExchange [Optional].
        connection_id: The connection_id of this V10CredentialExchange [Optional].
        created_at: The created_at of this V10CredentialExchange [Optional].
        credential: The credential of this V10CredentialExchange [Optional].
        credential_definition_id: The credential_definition_id of this V10CredentialExchange [Optional].
        credential_exchange_id: The credential_exchange_id of this V10CredentialExchange [Optional].
        credential_id: The credential_id of this V10CredentialExchange [Optional].
        credential_offer: The credential_offer of this V10CredentialExchange [Optional].
        credential_offer_dict: The credential_offer_dict of this V10CredentialExchange [Optional].
        credential_proposal_dict: The credential_proposal_dict of this V10CredentialExchange [Optional].
        credential_request: The credential_request of this V10CredentialExchange [Optional].
        credential_request_metadata: The credential_request_metadata of this V10CredentialExchange [Optional].
        error_msg: The error_msg of this V10CredentialExchange [Optional].
        initiator: The initiator of this V10CredentialExchange [Optional].
        parent_thread_id: The parent_thread_id of this V10CredentialExchange [Optional].
        raw_credential: The raw_credential of this V10CredentialExchange [Optional].
        revoc_reg_id: The revoc_reg_id of this V10CredentialExchange [Optional].
        revocation_id: The revocation_id of this V10CredentialExchange [Optional].
        role: The role of this V10CredentialExchange [Optional].
        schema_id: The schema_id of this V10CredentialExchange [Optional].
        state: The state of this V10CredentialExchange [Optional].
        thread_id: The thread_id of this V10CredentialExchange [Optional].
        trace: The trace of this V10CredentialExchange [Optional].
        updated_at: The updated_at of this V10CredentialExchange [Optional].
    """

    auto_issue: Optional[bool] = None
    auto_offer: Optional[bool] = None
    auto_remove: Optional[bool] = None
    connection_id: Optional[str] = None
    created_at: Optional[str] = None
    credential: Optional[IndyCredInfo] = None
    credential_definition_id: Optional[str] = None
    credential_exchange_id: Optional[str] = None
    credential_id: Optional[str] = None
    credential_offer: Optional[IndyCredAbstract] = None
    credential_offer_dict: Optional[CredentialOffer] = None
    credential_proposal_dict: Optional[CredentialProposal] = None
    credential_request: Optional[IndyCredRequest] = None
    credential_request_metadata: Optional[Dict[str, Any]] = None
    error_msg: Optional[str] = None
    initiator: Optional[str] = None
    parent_thread_id: Optional[str] = None
    raw_credential: Optional[IndyCredential] = None
    revoc_reg_id: Optional[str] = None
    revocation_id: Optional[str] = None
    role: Optional[str] = None
    schema_id: Optional[str] = None
    state: Optional[str] = None
    thread_id: Optional[str] = None
    trace: Optional[bool] = None
    updated_at: Optional[str] = None

    @validator("created_at")
    def created_at_pattern(cls, value):
        assert value is not None and re.match(
            r"^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
            value,
        )
        return value

    @validator("credential_definition_id")
    def credential_definition_id_pattern(cls, value):
        assert value is not None and re.match(
            r"^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
            value,
        )
        return value

    @validator("schema_id")
    def schema_id_pattern(cls, value):
        assert value is not None and re.match(
            r"^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
            value,
        )
        return value

    @validator("updated_at")
    def updated_at_pattern(cls, value):
        assert value is not None and re.match(
            r"^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
            value,
        )
        return value


V10CredentialExchange.update_forward_refs()
