# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, validator  # noqa: F401
from acapy_wrapper.models.v20_cred_ex_record_by_format import V20CredExRecordByFormat
from acapy_wrapper.models.v20_cred_issue import V20CredIssue
from acapy_wrapper.models.v20_cred_offer import V20CredOffer
from acapy_wrapper.models.v20_cred_preview import V20CredPreview
from acapy_wrapper.models.v20_cred_proposal import V20CredProposal
from acapy_wrapper.models.v20_cred_request import V20CredRequest


class V20CredExRecord(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    V20CredExRecord - a model defined in OpenAPI

        auto_issue: The auto_issue of this V20CredExRecord [Optional].
        auto_offer: The auto_offer of this V20CredExRecord [Optional].
        auto_remove: The auto_remove of this V20CredExRecord [Optional].
        by_format: The by_format of this V20CredExRecord [Optional].
        connection_id: The connection_id of this V20CredExRecord [Optional].
        created_at: The created_at of this V20CredExRecord [Optional].
        cred_ex_id: The cred_ex_id of this V20CredExRecord [Optional].
        cred_issue: The cred_issue of this V20CredExRecord [Optional].
        cred_offer: The cred_offer of this V20CredExRecord [Optional].
        cred_preview: The cred_preview of this V20CredExRecord [Optional].
        cred_proposal: The cred_proposal of this V20CredExRecord [Optional].
        cred_request: The cred_request of this V20CredExRecord [Optional].
        error_msg: The error_msg of this V20CredExRecord [Optional].
        initiator: The initiator of this V20CredExRecord [Optional].
        parent_thread_id: The parent_thread_id of this V20CredExRecord [Optional].
        role: The role of this V20CredExRecord [Optional].
        state: The state of this V20CredExRecord [Optional].
        thread_id: The thread_id of this V20CredExRecord [Optional].
        trace: The trace of this V20CredExRecord [Optional].
        updated_at: The updated_at of this V20CredExRecord [Optional].
    """

    auto_issue: Optional[bool] = None
    auto_offer: Optional[bool] = None
    auto_remove: Optional[bool] = None
    by_format: Optional[V20CredExRecordByFormat] = None
    connection_id: Optional[str] = None
    created_at: Optional[str] = None
    cred_ex_id: Optional[str] = None
    cred_issue: Optional[V20CredIssue] = None
    cred_offer: Optional[V20CredOffer] = None
    cred_preview: Optional[V20CredPreview] = None
    cred_proposal: Optional[V20CredProposal] = None
    cred_request: Optional[V20CredRequest] = None
    error_msg: Optional[str] = None
    initiator: Optional[str] = None
    parent_thread_id: Optional[str] = None
    role: Optional[str] = None
    state: Optional[str] = None
    thread_id: Optional[str] = None
    trace: Optional[bool] = None
    updated_at: Optional[str] = None

    @validator("created_at")
    def created_at_pattern(cls, value):
        assert value is not None and re.match(
            r"^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
            value,
        )
        return value

    @validator("updated_at")
    def updated_at_pattern(cls, value):
        assert value is not None and re.match(
            r"^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
            value,
        )
        return value


V20CredExRecord.update_forward_refs()
