# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, validator  # noqa: F401


class V20CredExRecordIndy(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    V20CredExRecordIndy - a model defined in OpenAPI

        created_at: The created_at of this V20CredExRecordIndy [Optional].
        cred_ex_id: The cred_ex_id of this V20CredExRecordIndy [Optional].
        cred_ex_indy_id: The cred_ex_indy_id of this V20CredExRecordIndy [Optional].
        cred_id_stored: The cred_id_stored of this V20CredExRecordIndy [Optional].
        cred_request_metadata: The cred_request_metadata of this V20CredExRecordIndy [Optional].
        cred_rev_id: The cred_rev_id of this V20CredExRecordIndy [Optional].
        rev_reg_id: The rev_reg_id of this V20CredExRecordIndy [Optional].
        state: The state of this V20CredExRecordIndy [Optional].
        updated_at: The updated_at of this V20CredExRecordIndy [Optional].
    """

    created_at: Optional[str] = None
    cred_ex_id: Optional[str] = None
    cred_ex_indy_id: Optional[str] = None
    cred_id_stored: Optional[str] = None
    cred_request_metadata: Optional[Dict[str, Any]] = None
    cred_rev_id: Optional[str] = None
    rev_reg_id: Optional[str] = None
    state: Optional[str] = None
    updated_at: Optional[str] = None

    @validator("created_at")
    def created_at_pattern(cls, value):
        assert value is not None and re.match(
            r"^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
            value,
        )
        return value

    @validator("cred_rev_id")
    def cred_rev_id_pattern(cls, value):
        assert value is not None and re.match(r"^[1-9][0-9]*$", value)
        return value

    @validator("rev_reg_id")
    def rev_reg_id_pattern(cls, value):
        assert value is not None and re.match(
            r"^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
            value,
        )
        return value

    @validator("updated_at")
    def updated_at_pattern(cls, value):
        assert value is not None and re.match(
            r"^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
            value,
        )
        return value


V20CredExRecordIndy.update_forward_refs()
