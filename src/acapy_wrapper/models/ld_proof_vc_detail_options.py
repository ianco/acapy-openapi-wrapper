# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, validator  # noqa: F401
from acapy_wrapper.models.credential_status_options import CredentialStatusOptions


class LDProofVCDetailOptions(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    LDProofVCDetailOptions - a model defined in OpenAPI

        challenge: The challenge of this LDProofVCDetailOptions [Optional].
        created: The created of this LDProofVCDetailOptions [Optional].
        credential_status: The credential_status of this LDProofVCDetailOptions [Optional].
        domain: The domain of this LDProofVCDetailOptions [Optional].
        proof_purpose: The proof_purpose of this LDProofVCDetailOptions [Optional].
        proof_type: The proof_type of this LDProofVCDetailOptions.
    """

    challenge: Optional[str] = None
    created: Optional[str] = None
    credential_status: Optional[CredentialStatusOptions] = None
    domain: Optional[str] = None
    proof_purpose: Optional[str] = None
    proof_type: str

    @validator("created")
    def created_pattern(cls, value):
        assert value is not None and re.match(r"^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$", value)
        return value

LDProofVCDetailOptions.update_forward_refs()
